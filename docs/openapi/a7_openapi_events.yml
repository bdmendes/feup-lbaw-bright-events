openapi: '3.0.2'

info:
  title: Bright Events
  version: '1.0'

servers:
  - url: https://api.server.test/v1

tags:
  - name: 'M01: Authentication'
  - name: 'M02: Users and Personal Profiles'
  - name: 'M03: Events and Event Content'
  - name: 'M04: Static Pages'
  - name: 'M05: Administration Management'

# Permissions
# NAU - Non-authenticated User
# AU - Authenticated User
# AUO - User that organizes an event
# ADM - System administrator

paths:
  /events/create:
    post:
      operationId: R301
      summary: 'R301: Create event'
      description: 'Create event: Access: AU'
      tags:
        - 'M03: Events and Event Content'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                isPrivate:
                  type: boolean
                date:
                  type: string
                organizer:
                  type: integer
                
      responses:
        '401':
          description: "Event creation requires authentication"
        '200':
          description: "Ok. show event creation page"
              
  /events/view/{id}:
    get:
      operationId: R302
      summary: "R302: Event's details"
      tags:
        - 'M03: Events and Event Content'
      responses:
        '404':
          description: 'Event not found'
        '403':
          description: "User doesn't have permission to view event"
        '401':
          description: "Event requires authentication to be viewed"
        '200':
          description: "OK. Show event's details"
    
    
  
  /events/edit/{id}:
    get:
      operationId: R304
      summary: "R304: Edit event "
      tags:
        - "M03: Events and Event-related Content"
      responses:
        '404' : 
          description: "Event not found"
        '200':
          description: "Ok. show event's details"
    put:
      operationId: R308
      summary: 'R301: Create event'
      description: 'Create event: Access: AU '
      tags:
        - 'M03: Events and Event Content'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: integer
                isprivate:
                  type: boolean
                  default: false
                organizer:
                  type: integer
              required: [title, description, isprivate, organizer]
      responses:
        '200':
          description: 'Ok. Event created.'
        '401':
          description: 'Unauthorized. User must be logged in'
        '500':
          description: 'Internal server error. Invalid data'
  

  
  /api/events:
    get:
      operationId: R301
      summary: "R301: Event's list"
      tags:
        - 'M03: Events and Event Content'
      responses:
        '200':
          description: 'OK, Show list of events'
      parameters:
        - in: query
          name: sortBy
          schema:
            type: string
          description: "Defines the value of which the event's should be ordered"

        - in : query
          name: order
          schema:
            type: string
          description: "Defines if it's ascending order or descending order"
        
        - in: query
          name: global
          schema:
            type: string 
          description: "Filters events via title and description"
        
        - in: query
          name: location
          schema:
            type: string
          description: "Filters events via location"

        - in: query
          name: organizer
          schema:
            type: integer
          description: "Filters events via it's organizer"

        - in: query
          name: tag
          schema:
            type: string
          description: "Filters events via tag"

        - in: query
          name: beginDate
          schema:
            type: string
            format: date
          description: "Show events that start after 'beginDate'"
        
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: "Show events that started before 'endDate'"
        
  /api/events/comments/{id}:
    get: 
      operationId: "R305"
      summary: "Get event's comments"
      tags:
        - 'M03: Events and Event Content'
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: "Offset of comments"
        - in: query
          name: size
          schema:
            type: integer
          description: "Determines the number of comments given"

      responses:
        '404':
          description: "Event not found"
        '200':
          description: "OK, show event's comments "
    
    put:
      operationId: R310
      summary: 'R310: Create comment'
      description: 'Create comment: Access: AU AUO '
      tags:
        - 'M03: Events and Event Content'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                body:
                  type: string
                user:
                  type: integer
                event:
                  type: integer
                author:
                  type: integer
              required: [body, user, event, author]
      responses:
        '200':
          description: 'Ok. Comment created.'
        '401':
          description: 'Unauthorized. User must be an attendee or organizer'
        '500':
          description: 'Internal server error. Invalid data'
  
        


  /api/events/attendees:
    get: 
      operationId: "R306"
      summary: "R306: Get event's attendees"
      tags:
        - 'M03: Events and Event Content'
      
      parameters:
        - in: query
          name: eventId
          schema:
            type: integer
          description: "Event's id"
        - in: query
          name: offset
          schema:
            type: integer
          description: "Offset of attendees"
        - in: query
          name: size
          schema:
            type: integer
          description: "Determines the number of attendees given"
      responses:
        '404':
          description: "Event not found"
        '200':
          description: "OK, show event's attendees "
    
  


  /api/events/invites/{id}:
    get: 
      operationId: "R307"
      summary: "R307: Get event's pending invites"
      tags:
        - 'M03: Events and Event Content'
      
      parameters:
        - in: query
          name: eventId
          schema:
            type: integer
          description: "Event's id"
        - in: query
          name: offset
          schema:
            type: integer
          description: "Offset of invites"
        - in: query
          name: size
          schema:
            type: integer
          description: "Determines the number of invites given"
      responses:
        '403':
          description: "User doesn't have permission to view event's invites"
        '402':
          description: "Requires authentication to view event's invites"
        '404':
          description: "Event not found"
        '200':
          description: "OK, show event's invites "
    put:
      operationId: R308
      summary: "R308: Submit an invite"
      tags:
        - 'M03: Events and Event Content'
      requestBody:
        description: 'Invite information'
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                event_id:
                  type: integer
                attendee_id: 
                  type: integer
              required: [event_id, attendee_id]
      responses:
        '200':
          description: 'Ok. Invite created.'
        '401':
          description: 'Unauthorized. User must be an organizer'
        '500':
          description: 'Internal server error. Invalid data'
    delete:
      operationId: R307
      summary: "307: Delete Invite"
      description: "Delete Invite from database. Access: AUO"
      tags:
        - 'M03: Events and Event Content'
      responses:
        '200':
          description: 'OK. Deletion successful'
        '401':
          description: 'Unauthorized. Not enough permissions'
        '404':
          description: 'Join request not found'


  /api/events/join_requests/{id}:
    get: 
      operationId: "R307"
      summary: "R307: Get event's pending join requests"
      tags:
        - 'M03: Events and Event Content'
      
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: "Offset of join requests"
        - in: query
          name: size
          schema:
            type: integer
          description: "Determines the number of join requests given"
      responses:
        '403':
          description: "User doesn't have permission to view event's join requests"
        '402':
          description: "Requires authentication to view event's join requests"
        '404':
          description: "Event not found"
        '200':
          description: "OK, show event's join requests "
    
    put:
      operationId: R308
      summary: "R308: Submit a join request"
      tags:
        - 'M03: Events and Event Content'
      requestBody:
        description: 'Join request information'
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                event_id:
                  type: integer
                attendee_id: 
                  type: integer
              required: [event_id, attendee_id]
      responses:
        '200':
          description: 'OK. Deletion successful'
        '401':
          description: 'Unauthorized. Not enough permissions'
        '404':
          description: 'Join request not found'
    delete:
      operationId: R307
      summary: "307: Delete Join request"
      description: "Delete Join request from database. Access: Join request'a attendee (AU)"
      tags:
        - 'M03: Events and Event Content'
      responses:
        '200':
          description: 'OK. Deletion successful'
        '401':
          description: 'Unauthorized. Not enough permissions'
        '404':
          description: 'Join request not found'
