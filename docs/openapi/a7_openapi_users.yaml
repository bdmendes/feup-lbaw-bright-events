openapi: '3.0.2'

info:
  title: Bright Events
  version: '1.0'

servers:
  - url: https://api.server.test/v1

tags:
  - name: 'M01: Authentication and Personal Profile'
  - name: 'M02: User Search and User Profiles'
  - name: 'M03: Events and Event-related Content'
  - name: 'M04: Static Pages'
  - name: 'M05: Administration Management'

# Permissions
# NAU - Non-authenticated User
# AU - Authenticated User
# AUO - User that organizes an event
# ADM - System administrator

paths:
  /users/view:
    get:
      operationId: Rxx
      summary: 'Rxx: View user profile'
      description: 'Show the individual user profile. Access: NAU'
      tags:
        - 'M02: User Search and User Profiles'
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'Ok. Show User Profile UI'
        '404':
          description: 'User not found'
          
  /users/edit:
    get:
      operationId: Rxx
      summary: 'Rxx: Edit user profile form'
      security:
        - cookieAuth: []
      description: 'Provide edit user profile form. Access: AU'
      tags:
        - 'M02: User Search and User Profiles'
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
      responses: 
        '200':
          description: 'Ok. Show Edit User Profile UI'
        '404':
          description: 'User not found'
        '401':
          description: 'Unauthorized. User must be logged in'
    post:
      operationId: Rxx
      summary: 'Rxx: Edit user profile action'
      security:
        - cookieAuth: []
      description: 'Process the new user profile information. Access: AU'
      tags:
        - 'M02: User Search and User Profiles'
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                password:
                  type: string
                name:
                  type: string
                email:
                  type: string
                birth_date:
                  type: string
                  format: date
                bio:
                  type: string
      responses: 
        '200':
          description: 'Ok. Show Edit User Profile UI'
        '404':
          description: 'User not found'
        '401':
          description: 'Unauthorized. User must be logged in'
        '500':
          description: 'Internal server error. Invalid data'

  /api/users:
    get:
      operationId: Rxx
      summary: "Rxx: Users list"
      tags:
        - 'M02: User Search and User Profiles'
      responses:
        '200':
          description: 'OK, Show list of users'
      parameters:
        - in: query
          name: sort_by
          schema:
            type: string
          description: "Defines the value of which the users should be ordered"

        - in : query
          name: order
          schema:
            type: string
          description: "Defines if it's ascending order or descending order"
        
        - in: query
          name: global
          schema:
            type: string 
          description: "Filters users via username and name"
    delete:
      operationId: Rxx
      summary: "Rxx: Users list"
      security:
        - cookieAuth: []
      tags:
        - 'M02: User Search and User Profiles'
      responses:
        '200':
          description: 'OK. Deletion successful'
        '401':
          description: 'Unauthorized. Not enough permissions'
        '404':
          description: 'User not found'