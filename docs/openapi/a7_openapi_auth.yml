openapi: '3.0.2'

info:
  title: Bright Events
  version: '1.0'

servers:
  - url: https://api.server.test/v1

tags:
  - name: 'M01: Authentication and Personal Profile'
  - name: 'M02: User Search and User Profiles'
  - name: 'M03: Events and Event-related Content'
  - name: 'M04: Static Pages'
  - name: 'M05: Administration Management'

# Permissions
# NAU - Non-authenticated User
# AU - Authenticated User
# AUO - User that organizes an event
# ADM - System administrator

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID

paths:
  /login:
    get:
      operationId: R101
      summary: 'R101: Login Form'
      description: 'Provide login form. Accessible by NAU'
      tags:
        - 'M01: Authentication and Personal Profile'
      responses:
        '200':
          description: 'OK. Show login form (UI09)'

    post:
      operationId: R102
      summary: 'R102: Login Action'
      description: 'Process the login form. Accessible by NAU'
      tags:
        - 'M01: Authentication and Personal Profile'
      
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password

      responses:
        '302':
          description: 'Post credentials processing redirect'
          headers:
            Location:
              description: 'Redirect path'
              schema:
                type: string
              examples:
                302Success:
                  description: 'Authentication succeeded. Redirecting to user profile.'
                  value: '' # update when /users/{id} is implemented
                302Failure:
                  description: 'Authentication failed. Redirect to login form'
                  value: '/login'
            Set-Cookie:
              description: 'Login session cookie'
              schema:
                type: string
              examples:
                302Success:
                  description:  'Current user login session JSESSIONID'
                  value: JSESSIONID=eusouumacookie; Path=/; HttpOnly
                302Failure:
                  description: 'Invalid login session'
                  value: ''

  /logout:
    post:
      operationId: R103
      summary: 'R103: Logout Action'
      description: 'Logout the currently authenticated user. Accessible by AU, ADM'
      tags:
            - 'M01: Authentication and Personal Profile'
      responses:
        '302':
          description: 'Post logout redirect'
          headers:
            Location:
              description: 'Redirect path'
              schema:
                type: string
              examples:
                302Success:
                  description: 'Logout succeeded. Redirecting to home page'
                  value: '' # update when / is implemented

  /register:
    get:
      operationId: R104
      summary: 'R104: Provide Register form. Accessible by NAU'
      tags:
        - 'M01: Authentication and Personal Profile'
      responses:
        '200':
          description: 'OK. Show register form (UI08)'

    post:
      operationId: R105
      summary: 'R105: Register Action'
      description: 'Process the Register form. Accessible by NAU'
      tags:
        - 'M01: Authentication and Personal Profile'
      
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                confirm_password:
                  type: string
                gender:
                  type: string
                  enum: ['Male, Female, Other']
              required:
                - name
                - username
                - email
                - password
                - confirm_password
                - gender
    
      responses:
        '302':
          description: 'Post credentials processing redirect'
          headers:
            Location:
              description: 'Redirect path'
              schema:
                type: string
              examples:
                302Success:
                  description: 'Authentication succeeded. Redirect to user profile'
                  value: '' # update when /user/{id} is implemented
                302Failure:
                  description: 'Authentication failed. Redirect to register form'
                  value: '/register'
            Set-Cookie:
              description: 'Login session cookie'
              schema:
                type: string
              examples:
                302Success:
                  description:  'Current user login session JSESSIONID'
                  value: JSESSIONID=eusouumacookie; Path=/; HttpOnly
                302Failure:
                  description: 'Invalid login session'
                  value: ''